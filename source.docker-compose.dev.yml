version: "3.2"
services:

  #db: use Maria DB as our backend DB
  db:
    image: mariadb
    ports:
      - "<%=dbPort%>:3306"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /secret/password
    volumes:
      - type: bind
        source: ./mysql/conf.d/my.cnf
        target: /etc/mysql/conf.d/my.cnf
      - type: bind
        source: ./mysql/init
        target: /docker-entrypoint-initdb.d
      - type: bind
        source: ./mysql/data
        target: /var/lib/mysql
      # - type: bind
      #   source: ./mysql/conf.d
      #   target: /etc/mysql/conf.d
      - type: bind
        source: ./mysql/key
        target: /key
      - type: bind
        source: ./mysql/password
        target: /secret/password
    # on windows: use this command. (be sure to clear out mysql/data folder)
    # command: mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON
    ######
    # when there is a problem with : Error: ER_CRASHED_ON_USAGE: Table 'AAAAAA' is marked as crashed and should be repaired
    # this can happen with the alter table algorithm: try the safest(and slowest) COPY
    command: ["mysqld", "--alter-algorithm=copy"]
  #/db

  #redis: use redis to allow cote services to find each other across a swarm
  redis:
    image: redis
    #ports:
    #  - 6379:6379
    volumes:
      - type: bind
        source: ./redis/data
        target: /data
    command: redis-server --appendonly yes
  #/redis

  #api_sails: our API end point
  api_sails:
    image: node
    ports:
      - "1337:1337"
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
      - type: bind
        source: ./developer/api_sails
        target: /app
      - files:/data
    depends_on:
      - redis
    working_dir: /app
    command: node app.js
  #/api_sails

  #bot_manager: our #slack bot service
  bot_manager:
    image: node
    # ports:
    #   - "1338:1338"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./developer/bot_manager
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
      # sharing .sock files currently don't work on docker-for-mac:
      # https://github.com/docker/for-mac/issues/483
      # For a Mac host, configure config/local.js to hostConnection.tcp
      # but it doesn't hurt to include the /tmp dir for all platforms.
      - type: bind
        source: /tmp
        target: /tmp
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  #/bot_manager

  #notification_email: an smtp email service
  notification_email:
    image: node
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./developer/notification_email
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  #/notification_email

#  #watchtower: monitor and update our running containers
#  watchtower:
#    image: v2tec/watchtower
#    volumes:
#      # - /var/run/docker.sock:/var/run/docker.sock
#      - type: bind
#        source: /var/run/docker.sock
#        target: /var/run/docker.sock
#    command: --interval 10 --debug
#  #/watchtower


  #file_processor: A service to manage uploaded files.
  file_processor:
    image: node
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./developer/file_processor
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
      - files:/data
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  #/file_processor


  #tenant_manager: (AppBuilder) A service to manage the site's tenants
  tenant_manager:
    image: node
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./developer/tenant_manager
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  #/tenant_manager


  #user_manager: (AppBuilder) A microservice for managing Users
  user_manager:
    image: node
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./developer/user_manager
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  #/user_manager


  #process_manager: (AppBuilder) a micro service to manage our process tasks
  process_manager:
    image: node
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./developer/process_manager
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  #/process_manager


  # #definition_manager: (AppBuilder) A service to manage the definitions for a running AppBuilder platform.
  # definition_manager:
  #   image: node
  #   # ports:
  #   #   - "9229:9229"
  #   environment:
  #     - COTE_DISCOVERY_REDIS_HOST=redis
  #   volumes:
  #     - type: bind
  #       sou#rce: ./developer/definition_manager
  #       target: /app
  #     - type: bind
  #       source: ./config/local.js
  #       target: /app/config/local.js
  #   depends_on:
  #     - redis
  #   working_dir: /app
  #   command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  # #/definition_manager


  #appbuilder: (AppBuilder) A multi-tenant award service to process our AppBuilder requests.
  appbuilder:
    image: node
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./developer/appbuilder
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  #/appbuilder


  #log_manager: (AppBuilder) A log manager for various AB operations
  log_manager:
    image: node
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./developer/log_manager
        target: /app
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
    depends_on:
      - redis
    working_dir: /app
    command: [ "node", "--inspect=0.0.0.0:9229", "app.js" ]
  #/log_manager


volumes:
  files:
