name: "Update Version"
run-name: Update ${{ github.event.client_payload.service }} to ${{ github.event.client_payload.version }}
on:
  repository_dispatch:
    type: [service_new_version]
env:
  SERVICE: ${{ github.event.client_payload.service }}
  VERSION: ${{ github.event.client_payload.version }}
  TYPE: ${{ github.event.client_payload.type }}
jobs:
  get-branch:
    name: Create a staginging branch
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.set_branch.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          
      - run: npm i semver

      - id: set_branch
        run: echo "version=CI/staging/$(npx semver -i patch $(npm pkg get version | awk -F \" '{ print $2 }'))" >> "$GITHUB_OUTPUT"

      - uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'CI/staging/${{ steps.next_version.outputs.version }}'
          sha: '${{ github.event.pull_request.head.sha }}'
  update:
    name: Update `version.json`
    needs: get-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get-branch.outputs.branch }}

      - name: Version Update
        run: node versionUpdate.mjs service $SERVICE $VERSION

      - name: Commit Change
        id: commit_version
        uses: EndBug/add-and-commit@v9
        with:
          message: Update ${{ env.SERVICE }} to ${{ env.VERSION }}
          default_author: github_actions

  call-run-cy-test:
    name: Test
    concurrency:
       group: ci-staging
       cancel-in-progress: true
    needs: [get-branch, update]
    uses: ./.github/workflows/cy-tests.yml
    with:
      ref: ${{ needs.get-branch.outputs.branch }}

  call-bump-version:
    name: Version
    if: ${{ github.event.client_payload.type == 'minor' || github.event.client_payload.type == 'patch' }}
    concurrency:
       group: ci-staging
       cancel-in-progress: true
    needs: [get-branch, call-run-cy-test]
    uses: ./.github/workflows/bump-version.yml
    with:
      ref: ${{ needs.get-branch.outputs.branch }}
      # For the runtime, consider service version updates as patch
      type: patch

  merge-release:
    name: Merge & Release
    concurrency:
       group: ci-staging
       cancel-in-progress: true
    needs: [get-branch, call-bump-version]
    runs-on: ubuntu-latest
    env:
       BRANCH: ${{ needs.get-branch.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
          fetch-depth: 5

      - name: Rebase & Merge
        run: |
          git pull origin master &&
          git checkout master &&
          git checkout ${{ env.BRANCH }} &&
          git rebase master &&
          git checkout master &&
          git merge "${{ env.BRANCH }}" &&
          git push

      - name: Create release on GitHub
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ needs.call-bump-version.outputs.new_version }}
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete branch ${{ env.BRANCH }}
        uses: dawidd6/action-delete-branch@v3
        with:
          branches: ${{ env.BRANCH }}

  fail:
    name: Create a PR
    needs: [ get-branch, call-run-cy-test ]
    if: ${{ failure() || github.event.client_payload.type == 'major' }}
    runs-on: ubuntu-latest
    steps:
      - name: Get Run URL
        id: run_url
        run: echo "url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> "$GITHUB_OUTPUT"
      - uses: actions/github-script@v6
        id: my-script
        env:
          BRANCH: ${{ needs.get-branch.outputs.branch }}
          RUN_URL: ${{ steps.run_url.outputs.url }}
        with:
          result-encoding: string
          script: |
            const { SERVICE, VERSION, BRANCH, TYPE, RUN_URL } = process.env;
            const body = TYPE == 'major' ? 'This is a major service update. Automatic updating disabled. Review and merge manually if ready.' : `Automatic updated failed. Check the E2E tests. ${RUN_URL}`;
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Update ${SERVICE} to ${VERSION} (from GitHub Actions Workflow)`,
              base: "master",
              head: BRANCH,
              body,
            });
            console.log(pr.data);
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: ['patch'],
            });
