version: "3.2"

volumes:
  config:
  files:
  mysql_config:
  mysql_data:
  mysql_key:
  mysql_password:
  redis_data:

services:

  #db: use Maria DB as our backend DB
  db:
    image: mariadb
    ports:
      - "<%=dbPort%>:3306"
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /secret/password
    volumes:
      - mysql_config:/etc/mysql/conf.d
      - mysql_data:/var/lib/mysql
      - mysql_key:/key
      - mysql_password:/secret
    # on windows: use this command. (be sure to clear out mysql/data folder)
    # command: mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON
    ######
    # when there is a problem with : Error: ER_CRASHED_ON_USAGE: Table 'AAAAAA' is marked as crashed and should be repaired
    # this can happen with the alter table algorithm: try the safest(and slowest) COPY
    command: ["mysqld", "--alter-algorithm=copy"]
  #/db


  #redis: use redis to allow cote services to find each other across a swarm
  redis:
    image: redis
    ## NOTE: don't expose the service to the outside for security:
    ## if you do expose it, then set a password.
    #ports:
    #  - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
  #/redis


  #config: simply exists to pull in the config/local.js into our config volume
  config:
    image: node
    # environment:
    #   - AB_CONFIG_INSTALL=true
    volumes:
      - type: bind
        source: ./developer/config
        target: /app
      - type: bind
        source: ./config/local.js
        target: /config_safe/local.js
      - config:/config
    working_dir: /app
    command: ["node", "app.js"]
  #/config


  #api_sails: our API end point
  api_sails:
    image: skipdaddy/ab-api-sails:<%=tag%>
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - config:/app/config
      - files:/data
    depends_on:
      - redis
      - config
  #/api_sails

  #bot_manager: our #slack bot service
  bot_manager:
    image: skipdaddy/ab-bot-manager:<%=tag%>
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
      # sharing .sock files currently don't work on docker-for-mac:
      # https://github.com/docker/for-mac/issues/483
      # For a Mac host, configure config/local.js to hostConnection.tcp
      # but it doesn't hurt to include the /tmp dir for all platforms.
      - type: bind
        source: /tmp
        target: /tmp
    depends_on:
      - redis
      - config
  #/bot_manager

  #notification_email: an smtp email service
  notification_email:
    image: skipdaddy/ab-notification-email:<%=tag%>
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
      # TODO: if we enable passing of file paths for attachments
      # we'll need to include the common /data directory as well
    depends_on:
      - redis
      - config
  #/notification_email


#  #watchtower: monitor and update our running containers
#  watchtower:
#    image: v2tec/watchtower
#    volumes:
#      # - /var/run/docker.sock:/var/run/docker.sock
#      - type: bind
#        source: /var/run/docker.sock
#        target: /var/run/docker.sock
#    command: --interval 10 --debug
#  #/watchtower

  #file_processor: A service to manage uploaded files.
  file_processor:
    image: skipdaddy/ab-file-processor:<%=tag%>
    # ports:
    #   - "9229:9229"
    environment:
      - COTE_DISCOVERY_REDIS_HOST=redis
    volumes:
      - type: bind
        source: ./config/local.js
        target: /app/config/local.js
      - type: bind
        source: ./data
        target: /data
    depends_on:
      - redis
      - config
  #/file_processor


  # #tenant_manager: (AppBuilder) A service to manage the site's tenants
  # tenant_manager:
  #   image: skipdaddy/ab-tenant-manager:<%=tag%>
  #   # ports:
  #   #   - "9229:9229"
  #   environment:
  #    - COTE_DISCOVERY_REDIS_HOST=redis
  #   volumes:
  #     - type: bind
  #       source: ./config/local.js
  #       target: /app/config/local.js
  #   depends_on:
  #     - redis
  #     - config
  # #/tenant_manager


  # #user_manager: (AppBuilder) A microservice for managing Users
  # user_manager:
  #   image: skipdaddy/ab-user-manager:<%=tag%>
  #   # ports:
  #   #   - "9229:9229"
  #   environment:
  #    - COTE_DISCOVERY_REDIS_HOST=redis
  #   volumes:
  #     - type: bind
  #       source: ./config/local.js
  #       target: /app/config/local.js
  #   depends_on:
  #     - redis
  #     - config
  # #/user_manager


  # #process_manager: (AppBuilder) a micro service to manage our process tasks
  # process_manager:
  #   image: skipdaddy/ab-process-manager:<%=tag%>
  #   # ports:
  #   #   - "9229:9229"
  #   environment:
  #    - COTE_DISCOVERY_REDIS_HOST=redis
  #   volumes:
  #     - type: bind
  #       source: ./config/local.js
  #       target: /app/config/local.js
  #   depends_on:
  #     - redis
  #     - config
  # #/process_manager


  # #definition_manager: (AppBuilder) A service to manage the definitions for a running AppBuilder platform.
  # definition_manager:
  #   image: skipdaddy/ab-definition-manager:<%=tag%>
  #   # ports:
  #   #   - "9229:9229"
  #   environment:
  #    - COTE_DISCOVERY_REDIS_HOST=redis
  #   volumes:
  #     - type: bind
  #       source: ./config/local.js
  #       target: /app/config/local.js
  #   depends_on:
  #     - redis
  #     - config
  # #/definition_manager


  # #appbuilder: (AppBuilder) A multi-tenant award service to process our AppBuilder requests.
  # appbuilder:
  #   image: skipdaddy/ab-appbuilder:<%=tag%>
  #   # ports:
  #   #   - "9229:9229"
  #   environment:
  #    - COTE_DISCOVERY_REDIS_HOST=redis
  #   volumes:
  #     - type: bind
  #       source: ./config/local.js
  #       target: /app/config/local.js
  #   depends_on:
  #     - redis
  #     - config
  # #/appbuilder


  # #log_manager: (AppBuilder) A log manager for various AB operations
  # log_manager:
  #   image: skipdaddy/ab-log-manager:<%=tag%>
  #   # ports:
  #   #   - "9229:9229"
  #   environment:
  #    - COTE_DISCOVERY_REDIS_HOST=redis
  #   volumes:
  #     - type: bind
  #       source: ./config/local.js
  #       target: /app/config/local.js
  #   depends_on:
  #     - redis
  #     - config
  # #/log_manager
